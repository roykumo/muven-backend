#spring.redis.host=pub-redis-11508.ap-southeast-1-1.1.ec2.garantiadata.com
#spring.redis.password=P@ssw0rd
#spring.redis.port=11508

server.port=8908

app.config.publisher.url=http://localhost:7080/configs/applicationAll
business.param.publisher.url=http://localhost:7080/configs/parameterAll

#spring.redis.host=appcondev02.dev.corp.btpn.co.id
spring.redis.host=localhost
spring.redis.password=
spring.redis.port=6379

spring.jackson.serialization-inclusion=NON_NULL

# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "netgloo_blog" as database name and 
# "root" as username and password.
#spring.datasource.url = jdbc:mysql://localhost:3306/b-platform
#spring.datasource.username = root
#spring.datasource.password = password
spring.datasource.url=jdbc:mysql://localhost:3306/muven?characterEncoding=utf8&sessionVariables=storage_engine=InnoDB
spring.datasource.username=root
spring.datasource.password=admin123

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto = validate

# Naming strategy
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

spring.velocity.resourceLoaderPath=classpath:/mailTemplates/
spring.velocity.prefix=
spring.velocity.suffix=.vm
spring.velocity.cache=false
spring.velocity.check-template-location=true
spring.velocity.content-type=text/html
spring.velocity.charset=UTF-8
spring.velocity.properties.input.encoding=UTF-8
spring.velocity.properties.output.encoding=UTF-8